<?php


class EvaluateController extends BaseController
{
    private $year = '';
    private $evaluate = '';
    private $score_x = '';
    private $score_y = '';

    public function init()
    {
        $this->year = $this->getYear();
        $this->evaluate = $this->getTerm();
        $this->score_x = 'score1';
        $this->score_y = 'score2';
        if($this->evaluate == 'evaluate2'){
            $this->score_x = 'score3';
            $this->score_y = 'score4';
        }
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function actionIndex(){
        // 从session取得班主任所在的年级和班级
        $grade = 7; $class = 7;

        // 查找本学期还未填写评语的学生信息
        $sql = "select s_id, s_name, s_gender
                from student 
                where grade = $grade and class = $class and 
                s_id not in (select sid from evaluate where year = '$this->year')
                order by s_id";
        $result = $this->find($sql);

        return $this->render('index', array('s_list' => $result));
    }

    public function actionEdit(){
        // 获取所点击的学生的学号
        $id = Yii::app()->request->getParam('id');

        $evaluate = $this->evaluate;
        $score_x = $this->score_x;
        $score_y = $this->score_y;

        $criteria = new CDbCriteria();
        $criteria->condition = "year = '$this->year' and sid = $id";
        // 查找评语
        $criteria->select = "$this->evaluate";
        $arr = Evaluate::model()->findAll($criteria);
        // 获取评语
        if(empty($arr)) $text = '';
        else $text = $arr[0]->$evaluate;
        // 查找成绩
        $criteria->select = "$this->score_x, $this->score_y";
        $criteria->order = 'subject';
        $scores = Scores::model()->findAll($criteria);
        // 获取期中成绩
        $arr1 = array();
        // 获取期末成绩
        $arr2 = array();
        if(empty($scores)) {
            for($i = 0; $i < 10; $i++) {
                $arr1[] = 0;
                $arr2[] = 0;
            }
        } else {
            foreach ($scores as $score) {
                $arr1[] = $score->$score_x;
                $arr2[] = $score->$score_y;
            }
        }
        $result = array($text, $this->year, $arr1, $arr2);
        $this->render('edit', array('list' => $result));
    }

    public function actionCheck(){
        // 从session取得班主任所在的年级和班级
        $grade = 7; $class = 7;

        // 查询本学期已填写过评语的学生信息
        $sql = "select s_id, s_name, s_gender
                from student inner join evaluate on s_id = sid
                where grade = $grade and class = $class and year = '$this->year' 
                        and $this->evaluate is not null";
        $result = $this->find($sql);

        return $this->render('index', array('s_list' => $result));
    }

    function find($sql){
        $reader = Yii::app()->db->createCommand($sql)->query();
        return $reader->readall();
    }

    public function actionSave(){
        $sid = $_POST['id'];
        $content = $_POST['content'];

        // 查找评语
        $criteria = new CDbCriteria();
        $criteria->condition = "year = '$this->year' and sid = $sid";
        $arr = Evaluate::model()->findAll($criteria);
        // 存在删除
        if(!empty($arr)) {
            Evaluate::model()->deleteAll("sid = $sid");
        }

        $post = [ 'year' => $this->year, 'sid' => $sid, "$this->evaluate" => $content];

        $model = new Evaluate('create');
        $this->saveData($model, $post);

    }

    function saveData($model, $post) {
        $model->attributes = $post;
        show_status($model->save(),'保存成功','','保存失败');
    }

    // 根据当前月份获取学期
    function getTerm() {
        $month = date('M');

        $arr = array(3, 4, 5, 6, 7, 8);

        if (in_array($month, $arr)) { return 'evaluate2'; }
        else { return 'evaluate1'; }
    }

    // 根据当前年份和月份获取学年
    function getYear() {
        $year = date('Y');
        $month = date('n');

        $arr = array(3, 4, 5, 6, 7, 8);

        if (in_array($month, $arr)) {
            return $year - 1 . '-' . $year;
        }
        else {
            if($month == 1 || $month == 2)
                return $year - 1 . '-' . $year;
            else
                return $year . '-' . ($year + 1);
        }
    }
}